#!/usr/bin/env bash

DOC_ROOT="./docs"


find_modules() {
	find ./src -type f -name "*.sh" | sort
}

extract_metadata() {
	local conf_file="$1"
	echo "# $(grep '^feature=' "$conf_file" | cut -d= -f2- | xargs)"
	description=$(grep '^description=' "$conf_file" | cut -d= -f2- | xargs)
	[ -n "$description" ] && echo "$description"
	echo
	extend_desc=$(grep '^extend_desc=' "$conf_file" | cut -d= -f2- | xargs)
	[ -n "$extend_desc" ] && echo "## About"$'\n'"$extend_desc"$'\n'
}

extract_help() {
	local sh_file="$1"
	local modname
	modname="$(basename "$sh_file" .sh)"
	help_msg=$(bash -c "
		source \"$sh_file\"
		type _about_${modname} &>/dev/null && _about_${modname}
	" 2>/dev/null || true)
	if [ -n "$help_msg" ]; then
		echo "## Usage"$'\n'"~~~bash"$'\n'"$help_msg"$'\n'"~~~"$'\n'
	else
		echo "## Usage"$'\n'"No help available for $modname"$'\n'
	fi
}

find_image() {
	local modname="$1"
	local dir="$2"
	for ext in png jpg jpeg gif svg; do
		local img="${dir}/${modname}.${ext}"
		if [[ -f "$img" ]]; then
			echo "![${modname} image](./${modname}.${ext})"$'\n'
			return
		fi
	done
}

main() {
	rm -rf "$DOC_ROOT"
	mkdir -p "$DOC_ROOT"
	while IFS= read -r sh_file; do
		modname="$(basename "$sh_file" .sh)"
		conf_file="$(dirname "$sh_file")/${modname}.conf"
		md_file="${DOC_ROOT}/${modname}.md"
		echo "Processing: $sh_file"
		echo "modname=$modname conf_file=$conf_file sh_file=$sh_file"
		if [[ ! -f "$conf_file" ]]; then
			echo "Skipping $sh_file: missing $conf_file"
			continue
		fi
		# Copy image to DOC_ROOT if it exists
		for ext in png jpg jpeg gif svg; do
			img="$(dirname "$sh_file")/${modname}.${ext}"
			if [[ -f "$img" ]]; then
				cp "$img" "$DOC_ROOT/"
			fi
		done
		{
			extract_metadata "$conf_file"
			find_image "$modname" "$DOC_ROOT"
			extract_help "$sh_file"
			echo "- Autogenerated from \`$conf_file\` and \`$sh_file\`"
		} > "$md_file"
		echo "Generated $md_file"
	done < <(find_modules)
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
	main "$@"
	generate_docs_index
fi
